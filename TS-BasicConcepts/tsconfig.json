{
  // tsc --init 명령어로 생성하면 전체 주석이 포함된 파일이 생성됩니다.
  // 필요한 옵션만 남기고 나머지는 삭제하셔도 됩니다.
  //
  "compilerOptions": {
    "target": "ES2020",
    // 컴파일된 JavaScript의 ECMAScript 버전을 지정합니다.
    // 'ES3'(기본값), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 또는 'ESNEXT' 중 선택할 수 있습니다.

    "module": "ES2015",
    // 모듈 코드 생성 방식을 지정합니다.
    // 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', 또는 'ESNext' 중 선택할 수 있습니다.

    "outDir": "./dist",
    // 컴파일된 파일의 출력 디렉토리를 지정합니다.

    "rootDir": "./src",
    // 입력 파일의 루트 디렉토리를 지정합니다. --outDir과 함께 사용하여 출력 디렉토리 구조를 제어합니다.

    "removeComments": true,
    // 컴파일된 출력에서 주석을 제거합니다.

    "noEmitOnError": true,
    // 에러가 있을 경우 컴파일된 파일을 출력하지 않습니다.

    "strict": true,
    // 모든 엄격한 타입-체크 옵션을 활성화합니다.

    "noUnusedLocals": true,
    // 사용되지 않는 지역 변수에 대해 에러를 보고합니다.

    "noUnusedParameters": true,
    // 사용되지 않는 매개변수에 대해 에러를 보고합니다.

    "noImplicitReturns": true,
    // 함수의 모든 코드 경로가 값을 반환하지 않을 때 에러를 보고합니다.

    "noFallthroughCasesInSwitch": true,
    // switch문에서 fallthrough 케이스에 대해 에러를 보고합니다.

    "noUncheckedIndexedAccess": true,
    // 인덱스 시그니처 결과에 'undefined'를 포함합니다.

    "esModuleInterop": true,
    // CommonJS와 ES Modules 간의 상호 운용성을 가능하게 합니다.
    // 모든 가져오기에 대해 네임스페이스 객체 생성을 통해 CommonJS와 ES 모듈 간의 상호 운용성을 활성화합니다.
    // 'allowSyntheticDefaultImports'를 암시합니다.

    "forceConsistentCasingInFileNames": true
    // 파일 이름의 대소문자 일관성을 강제합니다.
    // 같은 파일에 대해 일관성 없는 참조를 허용하지 않습니다.
  }
}
